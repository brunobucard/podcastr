{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from \"../services/api\";\nimport { convertDurationToTimeString } from \"../utils/convertDurationToTimeString\";\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbmail: episode.thumbmail,\n      members: episode.members,\n      published_at: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  return {\n    props: {\n      episodes: data\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","Home","props","getStaticProps","data","get","params","_limit","_sort","_order","episodes","map","episode","id","title","thumbmail","members","published_at","locale","duration","Number","file","durationAsString","description","url","revalidate"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAgC,UAAhC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,sCAA5C;AAcA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,GAAG,CAACM,GAAJ,CAAQ,UAAR,EAAoB;AACzCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADiC,GAApB,CAAvB;AAQA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,OAAO,IAAI;AACnC,WAAO;AACLC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADP;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFV;AAGLC,MAAAA,SAAS,EAAEH,OAAO,CAACG,SAHd;AAILC,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OAJZ;AAKLC,MAAAA,YAAY,EAAErB,MAAM,CAACC,QAAQ,CAACe,OAAO,CAACK,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAAEpB;AAAT,OAA7C,CALf;AAMLqB,MAAAA,QAAQ,EAAEC,MAAM,CAACR,OAAO,CAACS,IAAR,CAAaF,QAAd,CANX;AAOLG,MAAAA,gBAAgB,EAAEtB,2BAA2B,CAACoB,MAAM,CAACR,OAAO,CAACS,IAAR,CAAaF,QAAd,CAAP,CAPxC;AAQLI,MAAAA,WAAW,EAAEX,OAAO,CAACW,WARhB;AASLC,MAAAA,GAAG,EAAEZ,OAAO,CAACS,IAAR,CAAaG;AATb,KAAP;AAWD,GAZgB,CAAjB;AAeA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAEN;AADL,KADF;AAILqB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CA9BM","sourcesContent":["import { GetStaticProps } from \"next\";\nimport { format, parseISO} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from \"../services/api\";\nimport { convertDurationToTimeString } from \"../utils/convertDurationToTimeString\";\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  published_at: string;\n  // ...\n};\n\ntype HomeProps = {\n  episodes: Episode[];\n};\n\nexport default function Home(props: HomeProps) {\n  return (\n    <div>\n      <h1>Index</h1>\n      <p>{}</p>\n    </div>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbmail: episode.thumbmail,\n      members: episode.members,\n      published_at: format(parseISO(episode.published_at), 'd MMM yy', {locale: ptBR}),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    };\n  })\n  \n\n  return {\n    props: {\n      episodes: data,\n    },\n    revalidate: 60 * 60 * 8,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}