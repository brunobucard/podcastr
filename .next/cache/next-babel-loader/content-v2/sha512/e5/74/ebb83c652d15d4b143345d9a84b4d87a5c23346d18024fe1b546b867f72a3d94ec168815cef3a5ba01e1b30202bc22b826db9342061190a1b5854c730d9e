{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services/api\";\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode() {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: router.query.slug\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","useRouter","api","convertDurationToTimeString","Episode","router","query","slug","getStaticProps","ctx","params","data","get","episode","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAgC,UAAhC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,sBAAO;AAAA,cAAKI,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEF,IAAAA;AAAF,MAAWE,GAAG,CAACC,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMT,GAAG,CAACU,GAAJ,CAAS,aAAYL,IAAK,EAA1B,CAAvB;AAEA,QAAMM,OAAO,GAAG;AACdC,IAAAA,EAAE,EAAEH,IAAI,CAACG,EADK;AAEdC,IAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFE;AAGdC,IAAAA,SAAS,EAAEL,IAAI,CAACK,SAHF;AAIdC,IAAAA,OAAO,EAAEN,IAAI,CAACM,OAJA;AAKdC,IAAAA,WAAW,EAAEpB,MAAM,CAACC,QAAQ,CAACY,IAAI,CAACQ,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAC3DC,MAAAA,MAAM,EAAEpB;AADmD,KAA1C,CALL;AAQdqB,IAAAA,QAAQ,EAAEC,MAAM,CAACX,IAAI,CAACY,IAAL,CAAUF,QAAX,CARF;AASdG,IAAAA,gBAAgB,EAAErB,2BAA2B,CAC3CmB,MAAM,CAACX,IAAI,CAACY,IAAL,CAAUF,QAAX,CADqC,CAT/B;AAYdI,IAAAA,WAAW,EAAEd,IAAI,CAACc,WAZJ;AAadC,IAAAA,GAAG,EAAEf,IAAI,CAACY,IAAL,CAAUG;AAbD,GAAhB;AAgBA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACHd,MAAAA;AADG,KADF;AAILe,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAJjB,CAIqB;;AAJrB,GAAP;AAMD,CA3BM","sourcesContent":["import { format, parseISO} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services/api\";\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport default function Episode() {\n  const router = useRouter();\n\n  return <h1>{router.query.slug}</h1>;\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR,\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(\n      Number(data.file.duration)\n    ),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {\n        episode,\n    },\n    revalidate: 60 * 60 * 24, // 24 hours\n  };\n};\n"]},"metadata":{},"sourceType":"module"}