{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/bruno/E2CE6648CE6614D7/NLW5 - reactjs/nlw5-reactjs/podcastr/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPLaying = _usePlayer.isPLaying,\n      isLooping = _usePlayer.isLooping,\n      isShuffling = _usePlayer.isShuffling,\n      tooglePlay = _usePlayer.tooglePlay,\n      toogleLoop = _usePlayer.toogleLoop,\n      toogleShuffle = _usePlayer.toogleShuffle,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious,\n      clearPlayerState = _usePlayer.clearPlayerState;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPLaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPLaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {\n      clearPlayerState();\n    }\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: \"#04d361\"\n            },\n            railStyle: {\n              backgroundColor: \"#9f75ff\"\n            },\n            handleStyle: {\n              borderColor: \"#04d361\",\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        },\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toogleShuffle,\n          className: isShuffling ? styles.isActive : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: tooglePlay,\n          children: isPLaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toogleLoop,\n          className: isLooping ? styles.isActive : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Player, \"eFoaF6N8W6+09Bv81Eum352FjOE=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/media/bruno/E2CE6648CE6614D7/NLW5 - reactjs/nlw5-reactjs/podcastr/src/components/Player/index.tsx"],"names":["Image","useRef","useEffect","useState","Slider","usePlayer","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPLaying","isLooping","isShuffling","tooglePlay","toogleLoop","toogleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","clearPlayerState","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","handleEpisodeEnded","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\nimport { useRef, useEffect, useState} from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { usePlayer } from '../../contexts/PlayerContext';\n\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport function Player() {\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [progress, setProgress] = useState(0);\n\n    const {\n      episodeList,\n      currentEpisodeIndex,\n      isPLaying,\n      isLooping,\n      isShuffling,\n      tooglePlay,\n      toogleLoop,\n      toogleShuffle,\n      setPlayingState,\n      playNext,\n      playPrevious, \n      hasNext,\n      hasPrevious,\n      clearPlayerState,\n    } = usePlayer();\n\n    useEffect(() => {\n        if (!audioRef.current) {\n            return;\n        }\n\n        if (isPLaying) {\n            audioRef.current.play();\n        }else {\n            audioRef.current.pause();\n        }\n    }, [isPLaying])\n\n\n    function setupProgressListener() {\n      audioRef.current.currentTime = 0;\n\n      audioRef.current.addEventListener('timeupdate', () => {\n        setProgress(Math.floor(audioRef.current.currentTime));\n      });\n    }\n\n  function handleSeek(amount: number) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }   \n  \n  function handleEpisodeEnded() {\n    if (hasNext){\n      playNext()\n    } else {\n      clearPlayerState()\n    }\n  }\n\n    const episode = episodeList[currentEpisodeIndex];\n  \n\n    return (\n      <div className={styles.playerContainer}>\n        <header>\n          <img src=\"/playing.svg\" alt=\"Tocando agora\" />\n          <strong>Tocando agora</strong>\n        </header>\n\n        {episode ? (\n          <div className={styles.currentEpisode}>\n            <Image\n              width={592}\n              height={592}\n              src={episode.thumbnail}\n              objectFit=\"cover\"\n            />\n            <strong>{episode.title}</strong>\n            <span>{episode.members}</span>\n          </div>\n        ) : (\n          <div className={styles.emptyPlayer}>\n            <strong>Selecione um podcast para ouvir</strong>\n          </div>\n        )}\n\n        <footer className={!episode ? styles.empty : \"\"}>\n          <div className={styles.progress}>\n          <span>{convertDurationToTimeString(progress)}</span>\n            <div className={styles.slider}>\n              {episode ? (\n                <Slider\n                  max={episode.duration}\n                  value={progress}\n                  onChange={handleSeek}\n                  trackStyle={{ backgroundColor: \"#04d361\" }}\n                  railStyle={{ backgroundColor: \"#9f75ff\" }}\n                  handleStyle={{ borderColor: \"#04d361\", borderWidth: 4 }}\n                />\n              ) : (\n                <div className={styles.emptySlider} />\n              )}\n            </div>\n\n            <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n          </div>\n\n          {episode && (\n            <audio\n              src={episode.url}\n              ref={audioRef}\n              loop={isLooping}\n              autoPlay\n              onEnded={handleEpisodeEnded}\n              onPlay={() => setPlayingState(true)}\n              onPause={() => setPlayingState(false)}\n            onLoadedMetadata={setupProgressListener}\n            />\n          )}\n\n          <div className={styles.buttons}>\n            <button\n              type=\"button\"\n              disabled={!episode || episodeList.length === 1}\n              onClick={toogleShuffle}\n              className={isShuffling ? styles.isActive : \"\"}\n            >\n              <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={playPrevious}\n              disabled={!episode || !hasPrevious}\n            >\n              <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\n            </button>\n            <button\n              type=\"button\"\n              className={styles.playButton}\n              disabled={!episode}\n              onClick={tooglePlay}\n            >\n              {isPLaying ? (\n                <img src=\"/pause.svg\" alt=\"Tocar\" />\n              ) : (\n                <img src=\"/play.svg\" alt=\"Tocar\" />\n              )}\n            </button>\n            <button\n              type=\"button\"\n              onClick={playNext}\n              disabled={!episode || hasNext}\n            >\n              <img src=\"/play-next.svg\" alt=\"Tocar próxima\" />\n            </button>\n            <button\n              type=\"button\"\n              disabled={!episode}\n              onClick={toogleLoop}\n              className={isLooping ? styles.isActive : \"\"}\n            >\n              <img src=\"/repeat.svg\" alt=\"Repetir\" />\n            </button>\n          </div>\n        </footer>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}