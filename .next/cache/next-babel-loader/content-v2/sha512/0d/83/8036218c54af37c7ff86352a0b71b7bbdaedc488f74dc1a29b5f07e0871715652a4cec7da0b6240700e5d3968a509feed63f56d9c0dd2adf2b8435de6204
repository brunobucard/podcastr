{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/episodes/[slug].tsx\";\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/episodes/[slug].tsx"],"names":["Episode","episode","title"],"mappings":";;;AAuBA,eAAe,SAASA,OAAT,OAA0C;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAEvD,sBACI;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD;KALuBF,O","sourcesContent":["import { format, parseISO} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services/api\";\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\ntype Episode = {\n    id: string;\n    title: string;\n    thumbnail: string;\n    members: string;\n    duration: number;\n    durationAsString: string;\n    url: string;\n    publishedAt: string;\n    description: string;\n};\n\ntype EpisodeProps = {\n    episode: Episode;\n}\n\nexport default function Episode({episode}: EpisodeProps) {\n  \n  return (\n      <h1>{episode.title}</h1>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR,\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(\n      Number(data.file.duration)\n    ),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {\n        episode,\n    },\n    revalidate: 60 * 60 * 24, // 24 hours\n  };\n};\n"]},"metadata":{},"sourceType":"module"}