{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/episodes/[slug].tsx\";\nimport { useRouter } from \"next/router\";\nexport default function Episode() {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: router.query.slug\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["/home/bruno/Documentos/nlw5-reactjs/podcastr/src/pages/episodes/[slug].tsx"],"names":["useRouter","Episode","router","query","slug","getStaticProps","ctx","params","data","api","get","episode","id","title","thumbnail","members","publishedAt","format","parseISO","published_at","locale","ptBR","duration","Number","file","durationAsString","convertDurationToTimeString","description","url","props","revalidate"],"mappings":";;AACA,SAASA,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AAEA,sBAAO;AAAA,cAAKE,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEF,IAAAA;AAAF,MAAWE,GAAG,CAACC,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMC,GAAG,CAACC,GAAJ,CAAS,aAAYN,IAAK,EAA1B,CAAvB;AAEA,QAAMO,OAAO,GAAG;AACdC,IAAAA,EAAE,EAAEJ,IAAI,CAACI,EADK;AAEdC,IAAAA,KAAK,EAAEL,IAAI,CAACK,KAFE;AAGdC,IAAAA,SAAS,EAAEN,IAAI,CAACM,SAHF;AAIdC,IAAAA,OAAO,EAAEP,IAAI,CAACO,OAJA;AAKdC,IAAAA,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACV,IAAI,CAACW,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAC3DC,MAAAA,MAAM,EAAEC;AADmD,KAA1C,CALL;AAQdC,IAAAA,QAAQ,EAAEC,MAAM,CAACf,IAAI,CAACgB,IAAL,CAAUF,QAAX,CARF;AASdG,IAAAA,gBAAgB,EAAEC,2BAA2B,CAC3CH,MAAM,CAACf,IAAI,CAACgB,IAAL,CAAUF,QAAX,CADqC,CAT/B;AAYdK,IAAAA,WAAW,EAAEnB,IAAI,CAACmB,WAZJ;AAadC,IAAAA,GAAG,EAAEpB,IAAI,CAACgB,IAAL,CAAUI;AAbD,GAAhB;AAgBA,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAFjB,CAEqB;;AAFrB,GAAP;AAID,CAzBM","sourcesContent":["import { GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\n\nexport default function Episode() {\n  const router = useRouter();\n\n  return <h1>{router.query.slug}</h1>;\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR,\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(\n      Number(data.file.duration)\n    ),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24, // 24 hours\n  };\n};\n"]},"metadata":{},"sourceType":"module"}